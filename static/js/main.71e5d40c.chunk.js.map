{"version":3,"sources":["utils/auth.js","utils/google-api.js","utils/sheets-api.js","utils/hours.js","components/Icons.js","components/SheetList/SheetListItem.js","components/SheetList/SheetListPresenter.js","components/SheetList/index.js","components/Dashboard/HoursSheetButton.js","components/Dashboard/CurrentWeekProgress.js","components/Dashboard/WeekDaysTable.js","components/Dashboard/DashboardPresenter.js","components/Spinner.js","components/Dashboard/index.js","components/GoogleAuth/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","error","isLoggedIn","isPending","user","reducer","state","action","type","Error","AuthContext","React","createContext","AuthProvider","props","useReducer","dispatch","Provider","value","useAuthContext","useContext","GOOGLE_API_KEY","config","GOOGLE_CLIENT_ID","GOOGLE_SHEETS_READY_ONLY_SCOPE","GOOGLE_DRIVE_METADATA_READ_ONLY_SCOPE","DISCOVERY_DOCS","getAuth","window","gapi","auth2","getAuthInstance","sheets","hoursLoadedAt","Date","parseInt","localStorage","getItem","date","setItem","getTime","fetchAllSheets","Promise","resolve","reject","client","drive","files","list","fields","q","then","response","result","length","setHoursSheetId","sheetId","JSON","stringify","find","sheet","id","getHoursSheet","hoursSheetJson","parse","getHoursSheetId","hoursSheetData","convertDateSerialNumberToDate","serialNumber","epochSeconds","setTime","setMinutes","getTimezoneOffset","getMinutes","buildHoursItemFromRow","row","hoursItem","timestamp","parseFloat","startDateTime","endDateTime","notes","trim","fetchHours","CACHE_SECONDS","map","item","params","spreadsheetId","range","valueRenderOption","dateTimeRenderOption","spreadsheets","values","get","hours","slice","dayOfWeek","dateIndex","getDay","Hours","sheetsApi","this","_sheetsApi","_isHoursDataLoaded","data","_hoursData","catch","console","currentWeek","currentDay","previousWeek","sunday","monday","tuesday","wednesday","thursday","friday","saturday","convertMsToHours","ms","thisWeek","forEach","hoursWorked","reduce","_getHoursForWeek","_firstDayOfCurrentWeek","previousWeekBeginDate","setDate","getDate","setMilliseconds","setSeconds","setHours","beginDate","endDate","filter","ExternalLinkIcon","icon","faExternalLinkAlt","SheetListItem","name","onClick","className","src","aria-hidden","alt","href","aria-label","target","rel","SheetListPresenter","onSheetSelect","key","SheetList","useState","googleSheets","setGoogleSheets","useEffect","a","async","HoursSheetButton","CurrentWeekProgress","min","max","percentOfGoal","style","maxWidth","width","role","aria-valuenow","toFixed","aria-valuemin","aria-valuemax","Row","header","isToday","WeekDaysTable","tableData","rowData","daysOfTheWeek","DashboardPresenter","days","hoursWorkedThisWeek","hoursLastWeek","day","Spinner","height","Container","children","Dashboard","auth","hoursSheet","setHoursSheet","isHoursLoaded","setIsHoursLoaded","load","isLoaded","totals","GoogleAuth","onAuthChange","isSignedIn","gapiAuth","currentUser","listen","message","signOut","signIn","Navbar","App","isGapiClientLoaded","setIsGapiClientLoaded","gapiError","setGapiError","init","clientId","scope","join","discoveryDocs","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0gBAOMA,EAAe,CACnBC,MAAO,KACPC,YAAY,EACZC,WAAW,EACXC,KAAM,MAGFC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAdiB,QAef,OAAO,eACFF,EADL,CAEEL,MAAOM,EAAON,MACdE,WAAW,IAEf,IAnBkB,SAoBhB,OAAO,eACFG,EADL,CAEEJ,YAAY,EACZC,WAAW,EACXC,KAAM,OAEV,IAzBmB,UA0BjB,OAAO,eACFE,EADL,CAEEH,WAAW,IAEf,IA7BmB,UA8BjB,OAAO,eACFG,EADL,CAEEJ,YAAY,EACZC,WAAW,EACXC,KAAMG,EAAOH,OAEjB,QACE,MAAM,IAAIK,MAAJ,+BAAkCF,EAAOC,SAI/CE,EAAcC,IAAMC,cAAc,IAE3BC,EAAe,SAAAC,GAAU,IAAD,EACTC,qBAAWV,EAASL,GADX,mBAC5BM,EAD4B,KACrBU,EADqB,KAEnC,OACE,kBAACN,EAAYO,SAAb,eACEC,MAAO,CAACZ,EAAOU,IACXF,KAKGK,EAAiB,kBAAMC,qBAAWV,I,uBCxDvCW,EAAqCC,EAArCD,eAAgBE,EAAqBD,EAArBC,iBAElBC,EACJ,wDACIC,EACJ,0DACIC,EAAiB,CACrB,2DACA,8DA2BWC,EAAU,kBAAMC,OAAOC,KAAKC,MAAMC,mBCrC3CC,EAAS,GAEPC,EACC,kBAAM,IAAIC,KAAKC,SAASC,aAAaC,QAAQ,2BAD9CJ,EAEC,SAAAK,GAAI,OAAIF,aAAaG,QAAQ,uBAAwBD,EAAKE,YAGpDC,EAAiB,WAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAU3BhB,OAAOC,KAAKgB,OAAOC,MAAMC,MACtBC,KAAK,CACJC,OAAQ,wDACRC,EAAG,uDAEJC,MAd6B,SAAAC,GAAa,IACnCL,EAAUK,EAASC,OAAnBN,MACR,IAAKA,GAASA,EAAMO,OAAS,EAC3B,OAAOV,EAAO,IAAInC,MAAM,sBAE1BuB,EAASe,EACTJ,EAAQI,KAQuBH,OAIxBW,EAAkB,SAAAC,GAAO,OACpCpB,aAAaG,QACX,cACAkB,KAAKC,UAAU1B,EAAO2B,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOL,QAGxCM,EAAgB,WAC3B,IACE,IAAMC,EAAiBnC,OAAOQ,aAAaC,QAAQ,eACnD,OAAO0B,GAAkBN,KAAKO,MAAMD,GACpC,MAAO9D,GACP,OAAO,OAIEgE,EAAkB,WAC7B,IAAMC,EAAiBJ,IACvB,OAAOI,GAAkBA,EAAeL,IAGpCM,EAAgC,SAAAC,GACpC,IAGMC,EAHkB,MAGHD,EADO,WAEtBf,EAAS,IAAInB,KAOnB,OANAmB,EAAOiB,QAAuB,IAAfD,GAIfhB,EAAOkB,WAAWlB,EAAOmB,oBAAsBnB,EAAOoB,cAE/CpB,GAGHqB,EAAwB,SAAAC,GAC5B,IAAMC,EAAY,GAUlB,OARAA,EAAUC,UAAYV,EAA8BW,WAAWH,EAAI,KACnEC,EAAUG,cAAgBZ,EACxBW,WAAWH,EAAI,IAAMG,WAAWH,EAAI,KAEtCC,EAAUI,YAAcb,EACtBW,WAAWH,EAAI,IAAMG,WAAWH,EAAI,KAEtCC,EAAUK,MAAQN,EAAI,GAAGO,OAClBN,GAUIO,EAAa,WAExB,OAAO,IAAIzC,SAAQ,SAACC,EAASC,GAC3B,IAPA,IAAIV,MAAOM,UAAYP,IAAoBO,UACf4C,IAO1BzC,EACEc,KAAKO,MAAM5B,aAAaC,QAAQ,eAAegD,KAAI,SAAAC,GAAI,sBAClDA,EADkD,CAErDT,UAAW,IAAI3C,KAAKoD,EAAKT,WACzBE,cAAe,IAAI7C,KAAKoD,EAAKP,eAC7BC,YAAa,IAAI9C,KAAKoD,EAAKN,uBANjC,CAWA,IAAMO,EAAS,CACbC,cAAevB,IACfwB,MAAO,MACPC,kBAAmB,oBACnBC,qBAAsB,iBAExB/D,OAAOC,KAAKgB,OAAOb,OAAO4D,aAAaC,OAAOC,IAAIP,GAAQpC,MAAK,SAAAC,GAE7D,IAAM2C,EAAQ3C,EAASC,OAAOwC,OAAOG,MAAM,GAAGX,IAAIX,GAClDzC,EAAkB,IAAIC,MACtBE,aAAaG,QAAQ,aAAckB,KAAKC,UAAUqC,IAClDpD,EAAQoD,KACPnD,Q,gBC7GDqD,EAAY,SAAAC,GAChB,MAAO,CACL,SACA,SACA,UACA,YACA,WACA,SACA,YACAA,EAAUC,WAGDC,EAAb,WACE,cAA4B,IAAdC,EAAa,EAAbA,UAAa,oBACzBC,KAAKC,WAAaF,EAClBC,KAAKE,oBAAqB,EAH9B,mDAMU,IAAD,OACL,OAAOF,KAAKC,WACTpB,aACAhC,MAAK,SAAAsD,GACJ,EAAKD,oBAAqB,EAC1B,EAAKE,WAAaD,KAEnBE,MAAMC,QAAQ3G,SAbrB,iCAiBI,OAAOqG,KAAKE,qBAjBhB,+BAqBI,IAAMnD,EAAS,CACbwD,YAAa,CAAEd,MAAO,GACtBe,WAAY,CAAEf,MAAO,GACrBgB,aAAc,CAAEhB,MAAO,GACvBiB,OAAQ,CAAEjB,MAAO,GACjBkB,OAAQ,CAAElB,MAAO,GACjBmB,QAAS,CAAEnB,MAAO,GAClBoB,UAAW,CAAEpB,MAAO,GACpBqB,SAAU,CAAErB,MAAO,GACnBsB,OAAQ,CAAEtB,MAAO,GACjBuB,SAAU,CAAEvB,MAAO,IAGfwB,EAAmB,SAAAC,GAAE,OAAIA,EAAE,MAgBjC,OAdAlB,KAAKmB,WAAWC,SAAQ,YAAqC,IAAlC3C,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAClC2C,EAAcJ,EAAiBvC,EAAcD,GACnD1B,EAAO4C,EAAUlB,IAAgBgB,OAAS4B,EAC1CtE,EAAOwD,YAAYd,OAAS4B,KAG9BtE,EAAO0D,aAAahB,MAAQO,KAAKS,eAAea,QAC9C,SAAC7B,EAAD,GAA4C,IAAlChB,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACvB,OAAOe,EAAQwB,EAAiBvC,EAAcD,KAEhD,GAGF1B,EAAOyD,WAAWf,MAAQ1C,EAAO4C,EAAU,IAAI/D,OAAS6D,MACjD1C,IAlDX,iCAsDI,OAAOiD,KAAKuB,iBAAiBvB,KAAKwB,4BAtDtC,qCA0DI,IAAMC,EAAwBzB,KAAKwB,yBAEnC,OADAC,EAAsBC,QAAQD,EAAsBE,UAAY,GACzD3B,KAAKuB,iBAAiBE,KA5DjC,+CAgEI,IAAM1E,EAAS,IAAInB,KAMnB,OALAmB,EAAO6E,gBAAgB,GACvB7E,EAAO8E,WAAW,GAClB9E,EAAOkB,WAAW,GAClBlB,EAAO+E,SAAS,GAChB/E,EAAO2E,QAAQ3E,EAAO4E,UAAY5E,EAAO8C,UAClC9C,IAtEX,uCAyEmBgF,GACf,IAAMC,EAAU,IAAIpG,KAAKmG,EAAU7F,WAEnC,OADA8F,EAAQN,QAAQK,EAAUJ,UAAY,GAC/B3B,KAAKI,WAAW6B,QACrB,gBAAGxD,EAAH,EAAGA,cAAH,OACEA,GAAiBsD,GAAatD,EAAgBuD,SA9EtD,K,gBCRaE,EAAmB,SAAA1H,GAAK,OACnC,kBAAC,IAAD,iBAAqBA,EAArB,CAA4B2H,KAAMC,QCyBrBC,EA3BO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAM/E,EAAkB,EAAlBA,GAAIgF,EAAc,EAAdA,QACjC,OACE,4BACEC,UAAU,4CACVtI,KAAK,SACLqI,QAASA,GAET,yBACEE,IAAI,iGACJC,cAAY,OACZF,UAAU,OACVG,IAAI,KAELL,EACD,uBACEE,UAAU,qBACVI,KAAI,iDAA4CrF,EAA5C,sBACJsF,aAAW,wBACXC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,EAAD,SCPOC,EAdY,SAAC,GAA+B,IAA7BtH,EAA4B,EAA5BA,OAAQuH,EAAoB,EAApBA,cACpC,OACE,yBAAKT,UAAU,+BACZ9G,EAAOqD,KAAI,SAAAzB,GAAK,OACf,kBAAC,EAAD,eACE4F,IAAK5F,EAAMC,IACPD,EAFN,CAGEiF,QAAS,kBAAMU,EAAc3F,EAAMC,aCO9B4F,EAbG,SAAC,GAAuB,IAArBF,EAAoB,EAApBA,cAAoB,EACCG,mBAAS,IADV,mBAChCC,EADgC,KAClBC,EADkB,KAQvC,OANAC,qBAAU,YACR,WAAC,QAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACsBrH,KADtB,OACOY,EADP,OAECuG,EAAgBvG,GAFjB,qCAAD,KAIC,IAED,kBAAC,EAAD,CAAoBkG,cAAeA,EAAevH,OAAQ2H,K,QCE/CK,EAZU,SAAC,GAAD,IAAGxG,EAAH,EAAGA,QAAH,OACvB,uBACE0F,KAAI,iDAA4C1F,EAA5C,sBACJK,GAAG,4BACHiF,UAAU,oBACVM,OAAO,SACPC,IAAI,uBALN,oBAOmB,kBAAC,EAAD,QCSNY,EAlBa,SAAC,GAAuC,IAAD,IAApC/I,aAAoC,MAA5B,EAA4B,MAAzBgJ,WAAyB,MAAnB,EAAmB,MAAhBC,WAAgB,MAAV,IAAU,EAC3DC,EAAiC,KAAflJ,EAAQgJ,IAAeC,EAAMD,GACrD,OACE,yBAAKpB,UAAU,WAAWuB,MAAO,CAAEC,SAAU,MAC3C,yBACED,MAAO,CAAEE,MAAM,GAAD,OAAKH,EAAL,MACdtB,UAAU,eACV0B,KAAK,cACLC,gBAAevJ,EAAMwJ,QAAQ,GAC7BC,gBAAeT,EAAIQ,UACnBE,gBAAeT,EAAIO,WAElBxJ,EAAMwJ,QAAQ,GARjB,MAQwBP,EAAIO,aCZ5BG,EAAM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQrE,EAAoB,EAApBA,KAAMsE,EAAc,EAAdA,QAC3B,OACE,wBAAIjC,UAAWiC,EAAU,gBAAkB,IACzC,wBAAIjC,UAAU,mBACXgC,EAAQ,IACRC,GAAW,0BAAMjC,UAAU,4BAAhB,WAEd,4BAAKrC,KAeIuE,EAVO,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,SACpB,2BAAOnC,UAAU,aAAauB,MAAO,CAAEC,SAAU,MAC/C,+BACGW,EAAU5F,KAAI,SAAA6F,GAAO,OACpB,kBAAC,EAAD,eAAK1B,IAAK0B,EAAQJ,QAAYI,UCbhCC,EAAgB,CACpB,SACA,SACA,UACA,YACA,WACA,SACA,YAkCaC,EA/BY,SAAC,GAKrB,IAJLvE,EAII,EAJJA,YACAE,EAGI,EAHJA,aAEGsE,GACC,EAFJvE,WAEI,4DAEEwE,EAAsBzE,EAAYd,MAClCwF,EAAgBxE,EAAahB,MAC7BE,EAAYkF,GAAc,IAAIjJ,MAAOiE,UACrC8E,EAAYE,EAAc9F,KAAI,SAAAmG,GAAG,MAAK,CAC1CV,OAAQU,EACR/E,KAAM4E,EAAKG,GAAKzF,MAAM2E,QAAQ,GAC9BK,QAASS,IAAQvF,MAEnB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAK6C,UAAU,QACb,wBAAIA,UAAU,WAAd,iBACA,kBAAC,EAAD,CACE5H,MAAOoK,EACPnB,IAhBwB,KAkB1B,uBAAGrB,UAAU,QAAQyC,EAAcb,QAAQ,GAA3C,qBAEF,kBAAC,EAAD,CAAeO,UAAWA,MCzBjBQ,EAdC,WACd,OACE,yBAAK3C,UAAU,2DACb,yBACEuB,MAAO,CAAEE,MAAO,OAAQmB,OAAQ,QAChC5C,UAAU,iBACV0B,KAAK,UAEL,0BAAM1B,UAAU,WAAhB,iBCHF6C,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAK9C,UAAU,kBAAkB8C,IA6CpBC,EA1CG,SAAC,GAAe,IAAb9F,EAAY,EAAZA,MAAY,EAChB5E,IAAR2K,EADwB,sBAEKpC,mBAAS5F,KAFd,mBAExBiI,EAFwB,KAEZC,EAFY,OAGWtC,oBAAS,GAHpB,mBAGxBuC,EAHwB,KAGTC,EAHS,KAK/BrC,qBAAU,WACP,EAAAC,EAAAC,OAAA,oDACKgC,EADL,kCAAAjC,EAAA,MAES/D,EAAMoG,QAFf,OAICD,EAAiBnG,EAAMqG,YAJxB,uCAMA,CAACL,EAAYhG,IAOhB,OAAK+F,EAAK5L,WAIN+L,EAEA,kBAAC,EAAD,KACE,kBAAC,EAAuBlG,EAAMsG,WAKhCN,EACK,kBAAC,EAAD,MAIP,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWxC,cAvBW,SAAA/F,GACxBD,EAAgBC,GAChBwI,EAAclI,SAIP,kBAAC,EAAD,wBC0BIwI,GA/CI,WAAO,IAAD,EACGnL,IADH,mBAChBb,EADgB,KACTU,EADS,KAwBvB,OArBA6I,qBAAU,WACR7I,EAAS,CAAER,KdVQ,YcWnB,IAAM+L,EAAe,SAAAC,GAEjBxL,EADEwL,EACO,CACPhM,Kdba,UccbJ,KAAMqM,IAAWC,YAAY5G,OAGtB,CAAEtF,KdnBG,YcsBlB,IACE,IAAMsL,EAAOW,IACbX,EAAKU,WAAWG,OAAOJ,GACvBA,EAAaT,EAAKU,WAAW1G,OAC7B,MAAO7F,GACPe,EAAS,CAAER,Kd5BI,Qc4BSP,MAAOA,EAAM2M,aAEtC,CAAC5L,IAEAV,EAAMH,UACD,KAELG,EAAMJ,WAEN,4BACE2I,QAAS,kBAAM4D,IAAWI,WAC1B/D,UAAU,+CAFZ,YASF,4BACED,QAAS,kBAAM4D,IAAWK,UAC1BhE,UAAU,gDAFZ,wBClCWiE,GAXA,WACb,OACE,yBAAKjE,UAAU,+CACb,uBAAGA,UAAU,eAAeI,KAAK,gBAAjC,oBAEK,IACL,kBAAC,GAAD,QCuCS8D,OAtCf,WAAgB,IAAD,EACuCtD,oBAAS,GADhD,mBACNuD,EADM,KACcC,EADd,OAEqBxD,mBAAS,MAF9B,mBAENyD,EAFM,KAEKC,EAFL,KAab,OAVAvD,qBAAU,WfEsB,EAAAC,EAAAC,OAAA,yEACzB,IAAIrH,SAAQ,SAACC,EAASC,GAiB3BhB,OAAOC,KAAKsK,KAAK,gBAhBM,oBAAArC,EAAAC,OAAA,2EAAAD,EAAA,MAEblI,OAAOC,KAAKgB,OAAOwK,KAAK,CAC5BC,SAAU/L,EACVF,eAAgBA,EAChBkM,MAAO,CACL/L,EACAC,GACA+L,KAAK,KACPC,cAAe/L,KATE,OAWnBiB,IAXmB,+CAanBC,EAAO,EAAD,IAba,8DAFO,qCeC3BO,MAAK,kBAAM+J,GAAsB,MACjCvG,OAAM,SAAA1G,GACLiN,GAAsB,GACtBE,EAAanN,QAEhB,IAECgN,EAEA,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAWlH,MAAO,IAAIK,EAAM,CAAEC,iBAKhC8G,EAEA,yBAAKrE,UAAU,oEACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,aAAd,WACA,mHAQD,kBAAC,EAAD,OCjCW4E,QACW,cAA7B9L,OAAO+L,SAASC,UAEe,UAA7BhM,OAAO+L,SAASC,UAEhBhM,OAAO+L,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjL,MAAK,SAAAkL,GACjCA,EAAaC,iB","file":"static/js/main.71e5d40c.chunk.js","sourcesContent":["import React, { useReducer, useContext } from \"react\";\n\nexport const ERROR = \"ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const PENDING = \"PENDING\";\nexport const SUCCESS = \"SUCCESS\";\n\nconst initialState = {\n  error: null,\n  isLoggedIn: false,\n  isPending: false,\n  user: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ERROR:\n      return {\n        ...state,\n        error: action.error,\n        isPending: false\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        isPending: false,\n        user: null\n      };\n    case PENDING:\n      return {\n        ...state,\n        isPending: true\n      };\n    case SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        isPending: false,\n        user: action.user\n      };\n    default:\n      throw new Error(`Invalid action type: ${action.type}`);\n  }\n};\n\nconst AuthContext = React.createContext([]);\n\nexport const AuthProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <AuthContext.Provider\n      value={[state, dispatch]}\n      {...props}\n    />\n  );\n};\n\nexport const useAuthContext = () => useContext(AuthContext);\n","import config from \"../config.json\";\n\nconst { GOOGLE_API_KEY, GOOGLE_CLIENT_ID } = config;\n\nconst GOOGLE_SHEETS_READY_ONLY_SCOPE =\n  \"https://www.googleapis.com/auth/spreadsheets.readonly\";\nconst GOOGLE_DRIVE_METADATA_READ_ONLY_SCOPE =\n  \"https://www.googleapis.com/auth/drive.metadata.readonly\";\nconst DISCOVERY_DOCS = [\n  \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\n  \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\n];\n\n// Returns a promise which resolves after google client lib is loaded with the specified scopes\n// Rejects if client fails to initialize with error from google api\nexport const loadClientWithAuth = async () => {\n  return new Promise((resolve, reject) => {\n    const initGapiClient = async () => {\n      try {\n        await window.gapi.client.init({\n          clientId: GOOGLE_CLIENT_ID,\n          GOOGLE_API_KEY: GOOGLE_API_KEY,\n          scope: [\n            GOOGLE_SHEETS_READY_ONLY_SCOPE,\n            GOOGLE_DRIVE_METADATA_READ_ONLY_SCOPE\n          ].join(\" \"),\n          discoveryDocs: DISCOVERY_DOCS\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    };\n    window.gapi.load(\"client:auth2\", initGapiClient);\n  });\n};\n\nexport const getAuth = () => window.gapi.auth2.getAuthInstance();\n","let sheets = [];\n\nconst hoursLoadedAt = {\n  get: () => new Date(parseInt(localStorage.getItem(\"hours-data-loaded-at\"))),\n  set: date => localStorage.setItem(\"hours-data-loaded-at\", date.getTime())\n};\n\nexport const fetchAllSheets = () => {\n  return new Promise((resolve, reject) => {\n    const handleListFilesResponse = response => {\n      const { files } = response.result;\n      if (!files || files.length < 1) {\n        return reject(new Error(\"No Google Sheets!\"));\n      }\n      sheets = files;\n      resolve(files);\n    };\n\n    window.gapi.client.drive.files\n      .list({\n        fields: \"nextPageToken, files(id, name, webViewLink, iconLink)\",\n        q: 'mimeType=\"application/vnd.google-apps.spreadsheet\"'\n      })\n      .then(handleListFilesResponse, reject);\n  });\n};\n\nexport const setHoursSheetId = sheetId =>\n  localStorage.setItem(\n    \"hours-sheet\",\n    JSON.stringify(sheets.find(sheet => sheet.id === sheetId))\n  );\n\nexport const getHoursSheet = () => {\n  try {\n    const hoursSheetJson = window.localStorage.getItem(\"hours-sheet\");\n    return hoursSheetJson && JSON.parse(hoursSheetJson);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getHoursSheetId = () => {\n  const hoursSheetData = getHoursSheet();\n  return hoursSheetData && hoursSheetData.id;\n};\n\nconst convertDateSerialNumberToDate = serialNumber => {\n  const SECONDS_PER_DAY = 86400;\n  // Conversion: Jan 1, 1970 - Dec 30, 1899\n  const CONVERSION_SECONDS = -2209161600;\n  const epochSeconds = serialNumber * SECONDS_PER_DAY + CONVERSION_SECONDS;\n  const result = new Date();\n  result.setTime(epochSeconds * 1000);\n\n  // make time zone correction (serial numbers are stored in local time without\n  // the time zone)\n  result.setMinutes(result.getTimezoneOffset() + result.getMinutes());\n\n  return result;\n};\n\nconst buildHoursItemFromRow = row => {\n  const hoursItem = {};\n\n  hoursItem.timestamp = convertDateSerialNumberToDate(parseFloat(row[0]));\n  hoursItem.startDateTime = convertDateSerialNumberToDate(\n    parseFloat(row[1]) + parseFloat(row[2])\n  );\n  hoursItem.endDateTime = convertDateSerialNumberToDate(\n    parseFloat(row[1]) + parseFloat(row[3])\n  );\n  hoursItem.notes = row[4].trim();\n  return hoursItem;\n};\n\nconst useCachedHours = () => {\n  const CACHE_SECONDS = 60;\n  const timeSinceHoursLoaded =\n    new Date().getTime() - hoursLoadedAt.get().getTime();\n  return timeSinceHoursLoaded < CACHE_SECONDS * 1000;\n};\n\nexport const fetchHours = () => {\n  // google uses non-standard promises\n  return new Promise((resolve, reject) => {\n    if (useCachedHours()) {\n      resolve(\n        JSON.parse(localStorage.getItem(\"hours-data\")).map(item => ({\n          ...item,\n          timestamp: new Date(item.timestamp),\n          startDateTime: new Date(item.startDateTime),\n          endDateTime: new Date(item.endDateTime)\n        }))\n      );\n      return;\n    }\n    const params = {\n      spreadsheetId: getHoursSheetId(),\n      range: \"A:E\",\n      valueRenderOption: \"UNFORMATTED_VALUE\",\n      dateTimeRenderOption: \"SERIAL_NUMBER\"\n    };\n    window.gapi.client.sheets.spreadsheets.values.get(params).then(response => {\n      // skip header row\n      const hours = response.result.values.slice(1).map(buildHoursItemFromRow);\n      hoursLoadedAt.set(new Date());\n      localStorage.setItem(\"hours-data\", JSON.stringify(hours));\n      resolve(hours);\n    }, reject);\n  });\n};\n","const dayOfWeek = dateIndex => {\n  return [\n    \"sunday\",\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\",\n    \"saturday\"\n  ][dateIndex.getDay()];\n};\n\nexport class Hours {\n  constructor({ sheetsApi }) {\n    this._sheetsApi = sheetsApi;\n    this._isHoursDataLoaded = false;\n  }\n\n  load() {\n    return this._sheetsApi\n      .fetchHours()\n      .then(data => {\n        this._isHoursDataLoaded = true;\n        this._hoursData = data;\n      })\n      .catch(console.error);\n  }\n\n  isLoaded() {\n    return this._isHoursDataLoaded;\n  }\n\n  totals() {\n    const result = {\n      currentWeek: { hours: 0 },\n      currentDay: { hours: 0 },\n      previousWeek: { hours: 0 },\n      sunday: { hours: 0 },\n      monday: { hours: 0 },\n      tuesday: { hours: 0 },\n      wednesday: { hours: 0 },\n      thursday: { hours: 0 },\n      friday: { hours: 0 },\n      saturday: { hours: 0 }\n    };\n\n    const convertMsToHours = ms => ms / (1000 * 60 * 60);\n\n    this.thisWeek().forEach(({ startDateTime, endDateTime }) => {\n      const hoursWorked = convertMsToHours(endDateTime - startDateTime);\n      result[dayOfWeek(startDateTime)].hours += hoursWorked;\n      result.currentWeek.hours += hoursWorked;\n    });\n\n    result.previousWeek.hours = this.previousWeek().reduce(\n      (hours, { startDateTime, endDateTime }) => {\n        return hours + convertMsToHours(endDateTime - startDateTime);\n      },\n      0\n    );\n\n    result.currentDay.hours = result[dayOfWeek(new Date())].hours;\n    return result;\n  }\n\n  thisWeek() {\n    return this._getHoursForWeek(this._firstDayOfCurrentWeek());\n  }\n\n  previousWeek() {\n    const previousWeekBeginDate = this._firstDayOfCurrentWeek();\n    previousWeekBeginDate.setDate(previousWeekBeginDate.getDate() - 7);\n    return this._getHoursForWeek(previousWeekBeginDate);\n  }\n\n  _firstDayOfCurrentWeek() {\n    const result = new Date();\n    result.setMilliseconds(0);\n    result.setSeconds(0);\n    result.setMinutes(0);\n    result.setHours(0);\n    result.setDate(result.getDate() - result.getDay());\n    return result;\n  }\n\n  _getHoursForWeek(beginDate) {\n    const endDate = new Date(beginDate.getTime());\n    endDate.setDate(beginDate.getDate() + 7);\n    return this._hoursData.filter(\n      ({ startDateTime }) =>\n        startDateTime >= beginDate && startDateTime < endDate\n    );\n  }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ExternalLinkIcon = props => (\n  <FontAwesomeIcon {...props} icon={faExternalLinkAlt} />\n);\n","import React from \"react\";\nimport { ExternalLinkIcon } from \"../Icons\";\n\nconst SheetListItem = ({ name, id, onClick }) => {\n  return (\n    <button\n      className=\"list-group-item list-group-item-action h6\"\n      type=\"button\"\n      onClick={onClick}\n    >\n      <img\n        src=\"https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.spreadsheet\"\n        aria-hidden=\"true\"\n        className=\"mr-2\"\n        alt=\"\"\n      />\n      {name}\n      <a\n        className=\"web-view-link pl-2\"\n        href={`https://docs.google.com/spreadsheets/d/${id}/edit?usp=drivesdk`}\n        aria-label=\"Open sheet in new tab\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <ExternalLinkIcon />\n      </a>\n    </button>\n  );\n};\n\nexport default SheetListItem;\n","import React from \"react\";\nimport SheetListItem from \"./SheetListItem\";\n\nconst SheetListPresenter = ({ sheets, onSheetSelect }) => {\n  return (\n    <div className=\"list-group list-group-flush\">\n      {sheets.map(sheet => (\n        <SheetListItem\n          key={sheet.id}\n          {...sheet}\n          onClick={() => onSheetSelect(sheet.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default SheetListPresenter;\n","import React, { useState, useEffect } from \"react\";\nimport SheetListPresenter from \"./SheetListPresenter\";\nimport { fetchAllSheets } from \"../../utils/sheets-api\";\n\nconst SheetList = ({ onSheetSelect }) => {\n  const [googleSheets, setGoogleSheets] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await fetchAllSheets();\n      setGoogleSheets(result);\n    })();\n  }, []);\n  return (\n    <SheetListPresenter onSheetSelect={onSheetSelect} sheets={googleSheets} />\n  );\n};\n\nexport default SheetList;\n","import React from \"react\";\nimport { ExternalLinkIcon } from \"../Icons\";\n\nconst HoursSheetButton = ({ sheetId }) => (\n  <a\n    href={`https://docs.google.com/spreadsheets/d/${sheetId}/edit?usp=drivesdk`}\n    id=\"external-link-hours-sheet\"\n    className=\"btn btn-secondary\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    View Hours Sheet <ExternalLinkIcon />\n  </a>\n);\n\nexport default HoursSheetButton;\n","import React from \"react\";\n\nconst CurrentWeekProgress = ({ value = 0, min = 0, max = 100 }) => {\n  const percentOfGoal = ((value - min) * 100) / (max - min);\n  return (\n    <div className=\"progress\" style={{ maxWidth: 400 }}>\n      <div\n        style={{ width: `${percentOfGoal}%` }}\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        aria-valuenow={value.toFixed(1)}\n        aria-valuemin={min.toFixed()}\n        aria-valuemax={max.toFixed()}\n      >\n        {value.toFixed(1)} / {max.toFixed()}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentWeekProgress;\n","import React from \"react\";\n\nconst Row = ({ header, data, isToday }) => {\n  return (\n    <tr className={isToday ? \"table-primary\" : \"\"}>\n      <th className=\"text-capitalize\">\n        {header}{\" \"}\n        {isToday && <span className=\"ml-2 badge badge-primary\">Today!</span>}\n      </th>\n      <td>{data}</td>\n    </tr>\n  );\n};\n\nconst WeekDaysTable = ({ tableData = [] }) => (\n  <table className=\"table mt-5\" style={{ maxWidth: 400 }}>\n    <tbody>\n      {tableData.map(rowData => (\n        <Row key={rowData.header} {...rowData} />\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default WeekDaysTable;\n","import React from \"react\";\nimport HoursSheetButton from \"./HoursSheetButton\";\nimport CurrentWeekProgress from \"./CurrentWeekProgress\";\nimport WeekDaysTable from \"./WeekDaysTable\";\n\nconst daysOfTheWeek = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\"\n];\n\nconst DashboardPresenter = ({\n  currentWeek,\n  previousWeek,\n  currentDay,\n  ...days\n}) => {\n  const goalHoursWorkedThisWeek = 40;\n  const hoursWorkedThisWeek = currentWeek.hours;\n  const hoursLastWeek = previousWeek.hours;\n  const dayOfWeek = daysOfTheWeek[new Date().getDay()]\n  const tableData = daysOfTheWeek.map(day => ({\n    header: day,\n    data: days[day].hours.toFixed(2),\n    isToday: day === dayOfWeek\n  }));\n  return (\n    <>\n      <HoursSheetButton />\n      <div className=\"mt-5\">\n        <h2 className=\"h5 pt-3\">Current Week:</h2>\n        <CurrentWeekProgress\n          value={hoursWorkedThisWeek}\n          max={goalHoursWorkedThisWeek}\n        />\n        <p className=\"pt-3\">{hoursLastWeek.toFixed(2)} hours last week</p>\n      </div>\n      <WeekDaysTable tableData={tableData} />\n    </>\n  );\n};\n\nexport default DashboardPresenter;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"vh-100 d-flex justify-content-center align-items-center\">\n      <div\n        style={{ width: \"5rem\", height: \"5rem\" }}\n        className=\"spinner-border\"\n        role=\"status\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport { getHoursSheet, setHoursSheetId } from \"../../utils/sheets-api\";\nimport { useAuthContext } from \"../../utils/auth\";\nimport SheetList from \"../SheetList\";\nimport DashboardPresenter from \"./DashboardPresenter\";\nimport Spinner from \"../Spinner\";\n\nconst Container = ({ children }) => (\n  <div className=\"container mt-3\">{children}</div>\n);\n\nconst Dashboard = ({ hours }) => {\n  const [auth] = useAuthContext();\n  const [hoursSheet, setHoursSheet] = useState(getHoursSheet());\n  const [isHoursLoaded, setIsHoursLoaded] = useState(false)\n\n  useEffect(() => {\n    (async () => {\n      if (hoursSheet) {\n        await hours.load();\n      }\n      setIsHoursLoaded(hours.isLoaded())\n    })();\n  }, [hoursSheet, hours]);\n\n  const handleSheetSelect = sheetId => {\n    setHoursSheetId(sheetId);\n    setHoursSheet(getHoursSheet());\n  };\n\n  if (!auth.isLoggedIn) {\n    return <Container>Please log in.</Container>;\n  }\n\n  if (isHoursLoaded) {\n    return (\n      <Container>\n        <DashboardPresenter {...hours.totals()} />\n      </Container>\n    );\n  }\n\n  if (hoursSheet) {\n    return <Spinner />\n  }\n\n  return (\n    <Container>\n      <SheetList onSheetSelect={handleSheetSelect} />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport {\n  useAuthContext,\n  ERROR,\n  PENDING,\n  SUCCESS,\n  LOGOUT\n} from \"../../utils/auth\";\nimport { getAuth as gapiAuth } from \"../../utils/google-api\";\n\nconst GoogleAuth = () => {\n  const [state, dispatch] = useAuthContext();\n\n  useEffect(() => {\n    dispatch({ type: PENDING });\n    const onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        dispatch({\n          type: SUCCESS,\n          user: gapiAuth().currentUser.get()\n        });\n      } else {\n        dispatch({ type: LOGOUT });\n      }\n    };\n    try {\n      const auth = gapiAuth();\n      auth.isSignedIn.listen(onAuthChange);\n      onAuthChange(auth.isSignedIn.get());\n    } catch (error) {\n      dispatch({ type: ERROR, error: error.message });\n    }\n  }, [dispatch]);\n\n  if (state.isPending) {\n    return null;\n  }\n  if (state.isLoggedIn) {\n    return (\n      <button\n        onClick={() => gapiAuth().signOut()}\n        className=\"btn btn-outline-danger ml-auto my-2 my-sm-0\"\n      >\n        Sign Out\n      </button>\n    );\n  }\n  return (\n    <button\n      onClick={() => gapiAuth().signIn()}\n      className=\"btn btn-outline-primary ml-auto my-2 my-sm-0\"\n    >\n      Sign In with Google\n    </button>\n  );\n};\n\nexport default GoogleAuth;\n","import React from \"react\";\nimport GoogleAuth from \"../GoogleAuth\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"./index.html\">\n        My Hours Summary\n      </a>{\" \"}\n      <GoogleAuth />\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { AuthProvider } from \"./utils/auth\";\nimport * as gapi from \"./utils/google-api\";\nimport * as sheetsApi from \"./utils/sheets-api\";\nimport { Hours } from \"./utils/hours\";\nimport Dashboard from \"./components/Dashboard\";\nimport Navbar from \"./components/Navbar\";\nimport Spinner from \"./components/Spinner\";\n\nfunction App() {\n  const [isGapiClientLoaded, setIsGapiClientLoaded] = useState(false);\n  const [gapiError, setGapiError] = useState(null);\n  useEffect(() => {\n    gapi\n      .loadClientWithAuth()\n      .then(() => setIsGapiClientLoaded(true))\n      .catch(error => {\n        setIsGapiClientLoaded(false);\n        setGapiError(error)\n      });\n  }, []);\n\n  if (isGapiClientLoaded) {\n    return (\n      <AuthProvider>\n        <Navbar />\n        <Dashboard hours={new Hours({ sheetsApi })} />\n      </AuthProvider>\n    );\n  }\n\n  if (gapiError) {\n    return (\n      <div className=\"vh-100 d-flex justify-content-center align-items-center bg-light\">\n        <div className=\"text-danger\">\n          <h1 className=\"display-3\">Uh, oh!</h1>\n          <p>\n            An unexpected error occurred while connecting with Google. Please\n            try again later.\n          </p>\n        </div>\n      </div>\n    );\n  }\n  return <Spinner />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"\"\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}